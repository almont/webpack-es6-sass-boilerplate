/**
 * Font size
 * -----------------------------------------------------------------------------
 * This mixin will take a pixel value and convert it into a em value
 * with a pixel fallback.
 *
 * Usage:
 *
 *      p {
 *          @include font-size(16px)
 *      }
 *
 * Output:
 *
 *      p {
 *          font-size: 16px;
 *          font-size: 1em;
 *      }
 */

@function calculateRem($size, $context: 16px) {
    @return ($size / $context) * 1rem;
}

@mixin font-size($size) {
    font-size: $size;
    font-size: calculateRem($size);
}

/**
 * Visually hide an element
 * -----------------------------------------------------------------------------
 * This placeholder selector will visually hide an element while
 * still make it accessible for screenreaders.
 *
 * Usage:
 *
 *      p {
 *          @extend %visually-hidden;
 *      }
 *
 */

%visually-hidden,
.visually-hidden {
    position: absolute !important;
    overflow: hidden;
    width: 1px;
    height: 1px;
    padding: 0;
    border: 0;
    clip: rect(1px, 1px, 1px, 1px);
}

/**
 * Clearfix
 * -----------------------------------------------------------------------------
 * A solid clearfix by Nicolas Gallagher.
 * Source: (http://nicolasgallagher.com/micro-clearfix-hack/)
 *
 * Usage:
 *
 *      p {
 *          @extend %clearfix;
 *      }
 *
 */

%clearfix,
.clearfix {
    *zoom: 1;

    &:before {
        content: ' ';
        display: table;
    }

    &:after {
        content: ' ';
        display: table;
        clear: both;
    }
}

/**
 * prefix
 * -----------------------------------------------------------------------------
 *
 * Usage:
 *
 *      .element {
 *          @include prefix(transform, rotate(42deg), webkit ms);
 *      }
 *
 */

@mixin prefix($property, $value, $vendors: webkit moz ms o) {
    @if $vendors {
        @each $vendor in $vendors {
            #{"-" + $vendor + "-" + $property}: #{$value};
        }
    }
    #{$property}: #{$value};
}

/**
 * background
 * -----------------------------------------------------------------------------
 *
 * Usage:
 *
 *      .element {
 *          @include background(#ffffff);
 *      }
 *
 */

@mixin background($args...) {
    @include prefix(background, $args);
}

/**
 * border-radius
 * -----------------------------------------------------------------------------
 *
 * Usage:
 *
 *      .element {
 *          @include border-radius(50px 20px);
 *      }
 *
 */

@mixin border-radius($property) {
    @include prefix(border-radius, $property);
}

@mixin transition($args...) {
    @include prefix(transition, $args);
}

@mixin box-shadow($args...) {
    @include prefix(box-shadow, $args);
}
